                                                                                                                       Date:17/12/2024

Right side loop patterns
========================
1) 
      1
    2 2 
  3 3 3
4 4 4 4

ex:
class Test  
{
	public static void main(String[] args) 
	{
		//rows 
		for(int i=1;i<=4;i++)
		{
			//space 
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}

			//right side elements 
			for(int j=1;j<=i;j++)
			{
				System.out.print(i+" ");
			}

			//new line 
			System.out.println();
		}
	}
}


2)

4 4 4 4 
  3 3 3  
    2 2 
      1 

class Test  
{
	public static void main(String[] args) 
	{
		//rows 
		for(int i=4;i>=1;i--)
		{
			//space 
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}

			//right side elements 
			for(int j=1;j<=i;j++)
			{
				System.out.print(i+" ");
			}

			//new line 
			System.out.println();
		}
	}
}

3)

      *
    * * 
  * * * 
* * * *
  * * * 
    * * 
      *  

class Test  
{
	public static void main(String[] args) 
	{
		//rows 
		for(int i=1;i<=4;i++)
		{
			//space 
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}

			//right side elements 
			for(int j=1;j<=i;j++)
			{
				System.out.print("* ");
			}

			//new line 
			System.out.println();
		}

		//rows 
		for(int i=3;i>=1;i--)
		{
			//space 
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}

			//right side elements 
			for(int j=1;j<=i;j++)
			{
				System.out.print("* ");
			}

			//new line 
			System.out.println();
		}
	}
}

Pyramid loop patterns
=======================
1)
      1
    1 2 1 
  1 2 3 2 1 
1 2 3 4 3 2 1


class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//space 
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}

			//left side 
			for(int j=1;j<=i;j++)
			{
				System.out.print(j+" ");
			}

			//right side 
			for(int j=i-1;j>=1;j--)
			{
				System.out.print(j+" ");
			}

			//new line 
			System.out.println();
		}
	}
}

2) 

1 2 3 4 3 2 1
  1 2 3 2 1 
    1 2 1 
      1



class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=4;i>=1;i--)
		{
			//space 
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}

			//left side 
			for(int j=1;j<=i;j++)
			{
				System.out.print(j+" ");
			}

			//right side 
			for(int j=i-1;j>=1;j--)
			{
				System.out.print(j+" ");
			}

			//new line 
			System.out.println();
		}
	}
}

3)
      *
    * * * 
  * * * * * 
* * * * * * * 
  * * * * *
    * * * 
      * 



class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//space 
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}

			//left side 
			for(int j=1;j<=i;j++)
			{
				System.out.print("* ");
			}

			//right side 
			for(int j=i-1;j>=1;j--)
			{
				System.out.print("* ");
			}

			//new line 
			System.out.println();
		}

		//rows
		for(int i=3;i>=1;i--)
		{
			//space 
			for(int j=4;j>i;j--)
			{
				System.out.print("  ");
			}

			//left side 
			for(int j=1;j<=i;j++)
			{
				System.out.print("* ");
			}

			//right side 
			for(int j=i-1;j>=1;j--)
			{
				System.out.print("* ");
			}

			//new line 
			System.out.println();
		}
	}
}


Q) Write a java program to display below loop pattern?

1             1
1 2         2 1 
1 2 3     3 2 1 
1 2 3 4 4 3 2 1


class Test  
{
	public static void main(String[] args) 
	{
		int rows=4;

		for(int i=1;i<=rows;i++)
		{
			//left side 
			for(int j=1;j<=i;j++)
			{
				System.out.print(j+" ");
			}
			//space 
			for(int j=1;j<=(rows-i)*2;j++)
			{
				System.out.print("  ");
			}

			//right side 
			for(int j=i;j>=1;j--)
			{
				System.out.print(j+" ");
			}

			//new line
			System.out.println();
		}
	}
}


Q) Write a java program to display pascal triangle?

	1
       1 1 
      1 2 1 
     1 3 3 1 
    1 4 6 4 1 



class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=0;i<5;i++)
		{
			//space 
			for(int j=4;j>i;j--)
			{
				System.out.print(" ");
			}

			int number=1;

			for(int k=0;k<=i;k++)
			{
				System.out.print(number+" ");

				number = number * (i-k)/(k+1);
			}
			//new line 
			System.out.println();
		}
	}
}



Q) Write a java program to display below loop pattern?

    * 
   * * 
  * * * 
 * * * *
* * * * *

ex:


class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=0;i<5;i++)
		{
			//space 
			for(int j=4;j>i;j--)
			{
				System.out.print(" ");
			}

			for(int k=0;k<=i;k++)
			{
				System.out.print("* ");
			}
			//new line 
			System.out.println();
		}
	}
}

Q) Write a java program to display below loop patterns?

4 4 4 4 4 4 4 
4 3 3 3 3 3 4
4 3 2 2 2 3 4
4 3 2 1 2 3 4
4 3 2 2 2 3 4
4 3 3 3 3 3 4
4 4 4 4 4 4 4


class Test  
{
	public static void main(String[] args) 
	{
		int size=7;
		int n=4;

		//rows
		for(int i=0;i<size;i++)
		{
			//columns
			for(int j=0;j<size;j++)
			{
				int result = n - Math.min(Math.min(i,j),Math.min(size-i-1,size-j-1));
				System.out.print(result+" ");
			}
			//new line 
			System.out.println();
		}
	}
}

3) Jump statements
==================
Jump statements are used to jump from one section of code to another section.

We have three types of jump statements.

1) break 

2) continue 

3) return 

1) break stmt 
-----------
It is used to break the execution of loops and switch case.

For conditional statements we can use if condition.

syntax:
-----
	break; 

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");

		break;

		System.out.println("stmt2");

	}
}
o/p:  C.T.E :  break outside switch or loop

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");

		if(true)
		{
			break;
		}

		System.out.println("stmt2");

	}
}


o/p:  C.T.E : break outside switch or loop

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		for(int i=1;i<=10;i++)
		{
			if(i==5)
			{
				break;
			}
			System.out.print(i+" ");//1 2 3 4
		}
	}
}


2) continue statement
-------------------
It is used to continue th execution of loops.

For conditional statement we can use if condition.

syntax:
-----
	continue;

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");

		continue;

		System.out.println("stmt2");
	}
}
o/p: C.T.E :  continue outside of loop

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");

		if(true)
		{
			continue;
		}

		System.out.println("stmt2");
	}
}

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		for(int i=1;i<=10;i++)
		{
			if(i==5)
			{
				continue;
			}

			System.out.print(i+" ");//1 2 3 4 6 7 8 9 10
		}
	}
}


3) return statement
--------------------
A return statement is used to exit from the methods and it contains optional value.

syntax:
-------
	return <value>;

ex:
	public int sum()
	{
		return a+b; 
	}


ex:
	public float sum()
	{
		return 0.0; 
	}























































